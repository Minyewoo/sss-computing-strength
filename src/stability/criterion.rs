//! –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏

use std::rc::Rc;

use crate::{
    Curve, Error, IAcceleration, ICirculation, ICurve, IGrain, ILeverDiagram, IMetacentricHeight,
    IStability, IWind,
};

/// –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
struct Criterion {
    /// Ship type: "Tanker  container Barge-carrying Roll-on/roll-off Dry-bulk  General cargo timber"
    /// –£–≥–æ–ª –∑–∞–ª–∏–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ä—Å—Ç–∏–π
    flooding_angle: f64,
    /// –î–ª–∏–Ω–∞ —Å—É–¥–Ω–∞
    ship_length: f64,
    /// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —É–≥–æ–ª –∫—Ä–µ–Ω–∞ –æ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞.
    /// –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ ùëùùë£ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –∫–∞–∫ –¥–ª—è —Å—É–¥–Ω–∞
    /// –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞ –ø–ª–∞–≤–∞–Ω–∏—è —Å—É–¥–Ω–∞.
    wind: Rc<dyn IWind>,
    /// –î–∏–∞–≥—Ä–∞–º–º–∞ –ø–ª–µ—á —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
    lever_diagram: Rc<dyn ILeverDiagram>,
    /// –ö—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–≥–æ–¥—ã K
    stability: Rc<dyn IStability>,
    /// –ü—Ä–æ–¥–æ–ª—å–Ω–∞—è –∏ –ø–æ–ø–µ—Ä–µ—á–Ω–∞—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –º–µ—Ç–∞—Ü–µ–Ω—Ç—Ä–∏—á–µ—Å–∫–∞—è –≤—ã—Å–æ—Ç–∞
    metacentric_height: Rc<dyn IMetacentricHeight>,
    /// –†–∞—Å—á–µ—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    acceleration: Rc<dyn IAcceleration>,
    /// –†–∞—Å—á–µ—Ç –∫—Ä–µ–Ω–∞ –Ω–∞ —Ü–∏—Ä–∫—É–ª—è—Ü–∏–∏
    circulation: Rc<dyn ICirculation>,
    /// –°–º–µ—â–µ–Ω–∏–µ –≥—Ä—É–∑–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –Ω–∞–≤–∞–ª–æ—á–Ω—ã—Ö —Å–º–µ—â–∞–µ–º—ã—Ö –≥—Ä—É–∑–æ–≤ (–∑–µ—Ä–Ω–∞)
    grain: Rc<dyn IGrain>,
}
///
impl Criterion {
    /// –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä:
    /// * flooding_angle - –£–≥–æ–ª –∑–∞–ª–∏–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ä—Å—Ç–∏–π
    /// * ship_length - –î–ª–∏–Ω–∞ —Å—É–¥–Ω–∞
    /// * wind - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —É–≥–æ–ª –∫—Ä–µ–Ω–∞ –æ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞
    /// * lever_diagram - –î–∏–∞–≥—Ä–∞–º–º–∞ –ø–ª–µ—á —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
    /// * stability - –ö—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–≥–æ–¥—ã K
    /// * metacentric_height - –ü—Ä–æ–¥–æ–ª—å–Ω–∞—è –∏ –ø–æ–ø–µ—Ä–µ—á–Ω–∞—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –º–µ—Ç–∞—Ü–µ–Ω—Ç—Ä–∏—á–µ—Å–∫–∞—è –≤—ã—Å–æ—Ç–∞
    /// * acceleration - –†–∞—Å—á–µ—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    /// * circulation - –†–∞—Å—á–µ—Ç –∫—Ä–µ–Ω–∞ –Ω–∞ —Ü–∏—Ä–∫—É–ª—è—Ü–∏–∏
    /// * grain - –°–º–µ—â–µ–Ω–∏–µ –≥—Ä—É–∑–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –Ω–∞–≤–∞–ª–æ—á–Ω—ã—Ö —Å–º–µ—â–∞–µ–º—ã—Ö –≥—Ä—É–∑–æ–≤ (–∑–µ—Ä–Ω–∞)
    pub fn new(
        flooding_angle: f64,
        ship_length: f64,
        wind: Rc<dyn IWind>,
        lever_diagram: Rc<dyn ILeverDiagram>,
        stability: Rc<dyn IStability>,
        metacentric_height: Rc<dyn IMetacentricHeight>,
        acceleration: Rc<dyn IAcceleration>,
        circulation: Rc<dyn ICirculation>,
        grain: Rc<dyn IGrain>,
    ) -> Self {
        Self {
            flooding_angle,
            ship_length,
            wind,
            stability,
            lever_diagram,
            metacentric_height,
            acceleration,
            circulation,
            grain,
        }
    }
    /// –ö—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–≥–æ–¥—ã K
    pub fn weather(&mut self) -> Result<(f64, f64), Error> {
        Ok((self.stability.k()?, 1.))
    }
    /// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —É–≥–æ–ª –∫—Ä–µ–Ω–∞ –æ—Ç –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞.
    /// –ü—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –ø–ª–µ—á–∞ –∫—Ä–µ–Ω—è—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –æ—Ç –¥–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞ ùëôùë§1, –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ –ø—Ä–∏
    /// –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —É–≥–ª–∞ –∫—Ä–µ–Ω–∞ Œ∏ùë§1, –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ ùëùùë£ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –∫–∞–∫ –¥–ª—è —Å—É–¥–Ω–∞
    /// –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞ –ø–ª–∞–≤–∞–Ω–∏—è —Å—É–¥–Ω–∞.
    pub fn static_angle(&mut self) -> Result<(f64, f64), Error> {
        // –î–ª—è –≤—Å–µ—Ö —Å—É–¥–æ–≤ (–∫—Ä–æ–º–µ —Ä–∞–π–æ–Ω–∞ –ø–ª–∞–≤–∞–Ω–∏—è R3):
        // —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–≥–ª–∞ –∫—Ä–µ–Ω–∞ Œ∏ùë§1, –≤—ã–∑–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º –≤–µ—Ç—Ä–æ–º
        let wind_lever = self.wind.arm_wind_static();
        let binding = self
            .lever_diagram
            .angle(wind_lever);
        let wind_angle = binding
            .first()
            .ok_or(Error::FromString("Moment of wind too height!".to_owned()))?;
        Ok((*wind_angle, 16.0f64.min(0.8 * self.flooding_angle)))
        // TODO: –î–ª—è –ª–µ—Å–æ–≤–æ–∑–æ–≤:
        // theta_w_1 <= 16.0
        // –î–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤–æ–∑–æ–≤:
        // theta_w_1 <= 16.0.min( 0.5*flooding_angle )
    }
    /// –ü–ª–æ—â–∞–¥–∏ –ø–æ–¥ –¥–∏–∞–≥—Ä–∞–º–º–æ–π —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
    pub fn dso(&self) -> Vec<(f64, f64)> {
        //    –í—Å–µ —Å—É–¥–∞
        vec![
            (self.lever_diagram.dso_area(0., 30.), 0.055),
            (
                self.lever_diagram
                    .dso_area(0., 40.0f64.min(self.flooding_angle)),
                0.09,
            ),
            (
                self.lever_diagram
                    .dso_area(30., 40.0f64.min(self.flooding_angle)),
                0.03,
            ),
        ]
        // TODO:    –ü—Ä–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–µ –ø–∞–ª—É–±–Ω–æ–≥–æ –ª–µ—Å–Ω–æ–≥–æ –≥—Ä—É–∑–∞
        //    self.lever_diagram.area(0, 40.min(flooding_angle)) >= 0,08 –º¬∑—Ä–∞–¥
    }
    /// –ú–∞–∫—Å–∏–º—É–º –¥–∏–∞–≥—Ä–∞–º–º—ã —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
    pub fn dso_lever(&self) -> Result<(f64, f64), Error> {
        // –í—Å–µ —Å—É–¥–∞ (–∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –ª–µ—Å–æ–≤–æ–∑–æ–≤)
        let curve = Curve::new_linear(&vec![(105., 0.25), (80., 20.)]);
        Ok((
            self.lever_diagram.lever_moment(30.),
            curve.value(self.ship_length),
        ))
        // TODO:    –ü—Ä–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–µ –ø–∞–ª—É–±–Ω–æ–≥–æ –ª–µ—Å–Ω–æ–≥–æ –≥—Ä—É–∑–∞ –∏ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏–∏
    }
    /// –£–≥–æ–ª, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–∞–∫—Å–∏–º—É–º—É –¥–∏–∞–≥—Ä–∞–º–º—ã —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
    pub fn dso_lever_max_angle(&self) -> Result<(f64, f64), Error> {
        //   –í—Å–µ —Å—É–¥–∞
        let binding = self
            .lever_diagram
            .max_angles();
        let mas_angle = binding
            .first()
            .ok_or(Error::FromString("No max angles!".to_owned()))?;
        if self.lever_diagram.max_angles().len() == 1 {
            Ok((mas_angle.0, 30.))
        } else {
            Ok((mas_angle.0, 25.))
        }

        //    –°—É–¥–∞–º, –∏–º–µ—é—â–∏–º –æ—Ç–Ω–æ—à–µ–Ω–∏–µ ùêµ/ùê∑>2,
        //    delta_theta_max = 40.*((b/d).min(2.5) - 2.)*(k.min(1.5) - 1)*0.5;
        //    theta_max - delta_theta_max <= ()

        //    –°—É–¥–∞–º, –∏–º–µ—é—â–∏–º –æ—Ç–Ω–æ—à–µ–Ω–∏–µ ùêµ/ùê∑>2,5,
        //    theta_max >= 15

        //    if theta_max == 15. {
        //        dso_area(0, 15.) >= 0,07 –º¬∑—Ä–∞–¥,
        //    } else if theta_max >= 30. {
        //        dso_area(0, 30.) >= 0,055 –º¬∑—Ä–∞–¥,
        //    } else {
        //        dso_area(0, StabilityArm.theta_last()) >= 0.055 + 0.001*(30.0 - theta_max)
        //    }
    }
    /// –ú–µ—Ç–∞—Ü–µ–Ω—Ç—Ä–∏—á–µ—Å–∫–∞—è –≤—ã—Å–æ—Ç–∞
    pub fn metacentric_height(&self) -> Result<(f64, f64), Error> {
        // –í—Å–µ —Å—É–¥–∞
        // TODO: –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º ¬´—Å—É–¥–Ω–∞ –ø–æ—Ä–æ–∂–Ω–µ–º¬ª (–µ—Å–ª–∏ –±–∞–ª–ª–∞—Å—Ç –∏ –≥—Ä—É–∑ != 0)
        Ok((self.metacentric_height.h_cross_fix(), 0.15))

        // –°—É—Ö–æ–≥—Ä—É–∑–Ω–æ–µ –Ω–∞–∫–∞—Ç–Ω–æ–µ —Å—É–¥–Ω–æ 0.2
        // –ü—Ä–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–µ –ª–µ—Å–∞ 0,1 –º
        // –ü—Ä–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–µ –∑–µ—Ä–Ω–∞ 0.3 –º

        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–£–•–û–ì–†–£–ó–ê–ú
        // if MetacentricHeight.h_cross_fix().sqrt()/B > 0.08 || B/d > 2.5
        // —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–π —É—Å–∫–æ—Ä–µ–Ω–∏—è ùêæ‚àó
        //accelleration(&self)
    }
    /// –ö—Ä–∏—Ç–µ—Ä–∏–π —É—Å–∫–æ—Ä–µ–Ω–∏—è ùêæ‚àó
    pub fn accelleration(&self) -> Result<(f64, f64), Error> {
        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–£–î–ê–ú –°–ú–ï–®–ê–ù–ù–û–ì–û –†–ï–ö–ê –ú–û–†–Ø
        Ok((self.acceleration.calculate(), 1.))
    }
    /// –ö—Ä–∏—Ç–µ—Ä–∏–π –∫—Ä–µ–Ω–∞ –Ω–∞ —Ü–∏—Ä–∫—É–ª—è—Ü–∏–∏
    pub fn circulation(&self) -> Result<(f64, f64), Error> {
        // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –°–£–î–ê–ú, –ü–ï–†–ï–í–û–ó–Ø–©–ò–ú –ö–û–ù–¢–ï–ô–ù–ï–†–´
        let target_angle = 16.0f64.min(self.flooding_angle);
        if let Some(angle) = self.circulation.angle() {
            if angle <= target_angle {
                return Ok((angle, target_angle));
            }            
        }
        let velocity = self.circulation.velocity(target_angle);
        Err(Error::FromString(format!("An angle of {target_angle} degree requires speed {velocity} m/s")))

        // –í —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –ø–∞–ª—É–±–Ω—ã–π –≥—Ä—É–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∫—Ä—ã—à–∫–∞—Ö –≥—Ä—É–∑–æ–≤—ã—Ö
        // –ª—é–∫–æ–≤, –≤–º–µ—Å—Ç–æ —É–≥–ª–∞ –≤—Ö–æ–¥–∞ –∫—Ä–æ–º–∫–∏ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–ª—É–±—ã –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å—Å—è –º–µ–Ω—å—à–∏–π –∏–∑ —É–≥–ª–æ–≤
        // –≤—Ö–æ–¥–∞ –≤ –≤–æ–¥—É –≤–µ—Ä—Ö–Ω–µ–π –∫—Ä–æ–º–∫–∏ –∫–æ–º–∏–Ω–≥—Å–∞ –ª—é–∫–∞ –∏–ª–∏ –≤—Ö–æ–¥–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ –≤–æ–¥—É (–≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞
        // –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤—ã—Ö–æ–¥—è—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç—Ç–æ–≥–æ –∫–æ–º–∏–Ω–≥—Å–∞).

        // –í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∫ –≤–µ–ª–∏—á–∏–Ω–µ —É–≥–ª–∞ –∫—Ä–µ–Ω–∞ –Ω–∞ —Ü–∏—Ä–∫—É–ª—è—Ü–∏–∏ –ø—Ä–∏
        // —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ö–æ–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –≤ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏
        // –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å—É–¥–Ω–∞ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –Ω–∞
        // —Ü–∏—Ä–∫—É–ª—è—Ü–∏—é, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.
    }
    /// –ö—Ä–∏—Ç–µ—Ä–∏–π –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –Ω–∞–≤–∞–ª–æ—á–Ω—ã—Ö —Å–º–µ—â–∞–µ–º—ã—Ö –≥—Ä—É–∑–æ–≤
    pub fn grain(&self) -> Result<(f64, f64), Error> {
        // –î–û–ü–û–õ–ù–ò–ï–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ó–ï–†–ù–û–í–û–ó–ê–ú
        Ok((self.grain.area(), 0.075))

        // –í —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –ø–∞–ª—É–±–Ω—ã–π –≥—Ä—É–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –∫—Ä—ã—à–∫–∞—Ö –≥—Ä—É–∑–æ–≤—ã—Ö
        // –ª—é–∫–æ–≤, –≤–º–µ—Å—Ç–æ —É–≥–ª–∞ –≤—Ö–æ–¥–∞ –∫—Ä–æ–º–∫–∏ –≤–µ—Ä—Ö–Ω–µ–π –ø–∞–ª—É–±—ã –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å—Å—è –º–µ–Ω—å—à–∏–π –∏–∑ —É–≥–ª–æ–≤
        // –≤—Ö–æ–¥–∞ –≤ –≤–æ–¥—É –≤–µ—Ä—Ö–Ω–µ–π –∫—Ä–æ–º–∫–∏ –∫–æ–º–∏–Ω–≥—Å–∞ –ª—é–∫–∞ –∏–ª–∏ –≤—Ö–æ–¥–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ –≤–æ–¥—É (–≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞
        // –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤—ã—Ö–æ–¥—è—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç—Ç–æ–≥–æ –∫–æ–º–∏–Ω–≥—Å–∞).
    }
}
