//! –£—á–µ—Ç –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è

use std::rc::Rc;
use crate::{Bound, ILoad, icing::IcingArea};
use super::{IcingStab};

/// –£—á–µ—Ç –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è —Å—É–¥–Ω–∞, —Ä–∞—Å—á–µ—Ç –º–∞—Å—Å—ã –ª—å–¥–∞. 
/// –ú–æ–∂–µ—Ç –±—ã—Ç—å –±–µ–∑ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è, —á–∞—Å—Ç–∏—á–Ω—ã–º –∏ –ø–æ–ª–Ω—ã–º.  
/// –ü—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ–¥–æ–∏–∑–º–µ—â–µ–Ω–∏—è –∏  
/// –≤–æ–∑–≤—ã—à–µ–Ω–∏—è —Ü–µ–Ω—Ç—Ä–∞ —Ç—è–∂–µ—Å—Ç–∏. –ü—Ä–∏ —É—á–µ—Ç–µ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –∫ –º–∞—Å—Å–µ —Å—É–¥–Ω–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è  
/// –º–∞—Å—Å–∞ –ª—å–¥–∞ –Ω–∞ –±–æ—Ä—Ç–∞—Ö, –ø–∞–ª—É–±–∞—Ö, –ø–∞–ª—É–±–Ω–æ–º –≥—Ä—É–∑–µ. –ú–∞—Å—Å–∞ –ª—å–¥–∞ –∏ –µ–≥–æ –º–æ–º–µ–Ω—Ç—ã,  
/// —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –¥–ª—è –æ—Å–∞–¥–∫–∏ ùëëùëöùëñùëõ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ –≤—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–≥—Ä—É–∑–∫–∏. 
pub struct IcingMass {
    /// –¢–∏–ø –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è
    icing_stab: IcingStab,
    /// –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π
    icing_area_h: Vec<IcingArea>,
    /// –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–∞—Ä—É—Å–Ω–æ—Å—Ç–∏
    icing_area_v: Vec<IcingArea>,    
    /// –í—Å–µ –≥—Ä—É–∑—ã —Å—É–¥–Ω–∞
    loads_cargo: Vec<Rc<Box<dyn ILoad>>>,
}
///
impl IcingMass {
    /// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    /// * icing_stab - –¢–∏–ø –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è
    /// * icing_area_h - –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π
    /// * icing_area_v - –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–∞—Ä—É—Å–Ω–æ—Å—Ç–∏    
    /// * loads_cargo - –ì—Ä—É–∑—ã —Å—É–¥–Ω–∞
    pub fn new(
        icing_stab: IcingStab,
        icing_area_h: Vec<IcingArea>,
        icing_area_v: Vec<IcingArea>,        
        loads_cargo: Vec<Rc<Box<dyn ILoad>>>,
    ) -> Self {
        Self{
            icing_stab, 
            icing_area_h,
            icing_area_v,            
            loads_cargo,
        }
    }
    /// –°—É–º–º–∞—Ä–Ω–∞—è –º–∞—Å—Å–∞ –ª—å–¥–∞ –ø–æ–ø–∞–¥–∞—é—â–∞—è –≤ Bound –∏–ª–∏ –≤—Å—è –µ—Å–ª–∏ Bound –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    pub fn mass(&self, bound: Option<Bound>) -> f64 {
        self.icing_area_h.iter().map(|v| v.area(bound) ).sum::<f64>() * self.icing_stab.mass_h() + 
        self.icing_area_v.iter().map(|v| v.area(bound) ).sum::<f64>() * self.icing_stab.mass_v() +
        self.loads_cargo.iter().map(|v| v.windage_area(bound) ).sum::<f64>() * self.icing_stab.mass_h()
    }
}
///
impl IIcingMass for IcingMass {
}
#[doc(hidden)]
pub trait IIcingMass {
}
// –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
#[doc(hidden)]
pub struct FakeIcingMass {

}
#[doc(hidden)]
#[allow(dead_code)]
impl FakeIcingMass {
    pub fn new(

    ) -> Self {
        Self {

        }
    }
}



