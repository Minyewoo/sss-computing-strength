//! –£—á–µ—Ç –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è

use std::rc::Rc;
use crate::{icing_stab::IcingStab, ILoad};

/// –£—á–µ—Ç –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è —Å—É–¥–Ω–∞. –ú–æ–∂–µ—Ç –±—ã—Ç—å –±–µ–∑ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è, —á–∞—Å—Ç–∏—á–Ω—ã–º –∏ –ø–æ–ª–Ω—ã–º.  
/// –ü—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ–¥–æ–∏–∑–º–µ—â–µ–Ω–∏—è –∏  
/// –≤–æ–∑–≤—ã—à–µ–Ω–∏—è —Ü–µ–Ω—Ç—Ä–∞ —Ç—è–∂–µ—Å—Ç–∏. –ü—Ä–∏ —É—á–µ—Ç–µ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –∫ –º–∞—Å—Å–µ —Å—É–¥–Ω–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è  
/// –º–∞—Å—Å–∞ –ª—å–¥–∞ –Ω–∞ –±–æ—Ä—Ç–∞—Ö, –ø–∞–ª—É–±–∞—Ö, –ø–∞–ª—É–±–Ω–æ–º –≥—Ä—É–∑–µ. –ú–∞—Å—Å–∞ –ª—å–¥–∞ –∏ –µ–≥–æ –º–æ–º–µ–Ω—Ç—ã,  
/// —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –¥–ª—è –æ—Å–∞–¥–∫–∏ ùëëùëöùëñùëõ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ –≤—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–≥—Ä—É–∑–∫–∏. 
pub struct Icing {
    /// –¢–∏–ø –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è
    icing_stab: IcingStab,
    /// –í—Å–µ –≥—Ä—É–∑—ã —Å—É–¥–Ω–∞
    loads_cargo: Vec<Rc<Box<dyn ILoad>>>,
    /// –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π
    icing_area_h: Vec<ParsedIcingArea>,
    /// –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–∞—Ä—É—Å–Ω–æ—Å—Ç–∏
    icing_area_v: Vec<ParsedIcingArea>,
}
///
impl Icing {
    /// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    /// * icing_stab - –¢–∏–ø –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è
    /// * loads_cargo - –ì—Ä—É–∑—ã —Å—É–¥–Ω–∞
    /// * icing_area_h - –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π
    /// * icing_area_v - –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–∞—Ä—É—Å–Ω–æ—Å—Ç–∏
    pub fn new(
        /// –¢–∏–ø –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è
        icing_stab: IcingStab,
        /// –í—Å–µ –≥—Ä—É–∑—ã —Å—É–¥–Ω–∞
        loads_cargo: Vec<Rc<Box<dyn ILoad>>>,
        /// –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π
        icing_area_h: Vec<ParsedIcingArea>,
        /// –ü–ª–æ—â–∞–¥—å –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ø–∞—Ä—É—Å–Ω–æ—Å—Ç–∏
        icing_area_v: Vec<ParsedIcingArea>,
    ) -> Self {
        Self{
            icing_stab, 
            loads_cargo,
            icing_area_h,
            icing_area_v,
        }
    }
    /// –†–∞—Å—á–µ—Ç –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è
    fn calculate(&mut self) {
        // –ú–∞—Å—Å–∞ –ª—å–¥–∞ –Ω–∞ –æ–±—â–µ–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–µ–∫—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–∞–ª—É–± –∏ –ø–∞–ª—É–±–Ω–æ–≥–æ –≥—Ä—É–∑–∞, —Ç
        let p_h = self.desc_area;
        // –ú–æ–º–µ–Ω—Ç –º–∞—Å—Å—ã –ª—å–¥–∞ –Ω–∞ –æ–±—â–µ–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–µ–∫—Ü–∏–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–∞–ª—É–± –∏ –ø–∞–ª—É–±–Ω–æ–≥–æ –≥—Ä—É–∑–∞
        let m_x_h = ;
        let m_y_h = ;
        let m_z_h = ;
        // –ú–∞—Å—Å–∞ –ª—å–¥–∞ –Ω–∞ –ø–ª–æ—â–∞–¥–∏ –ø–∞—Ä—É—Å–Ω–æ—Å—Ç–∏, —Ç
        let p_v = (a_v_cs_dmin + a_v_ds) * self.w_v;
        // –ú–æ–º–µ–Ω—Ç –º–∞—Å—Å—ã –ª—å–¥–∞ –Ω–∞ –ø–ª–æ—â–∞–¥–∏ –ø–∞—Ä—É—Å–Ω–æ—Å—Ç–∏
        let m_x_v = (m_vx_cs_dmin + m_vx_ds) * self.w_v;
        let m_z_v = (m_vz_cs_dmin + m_vz_ds) * self.w_v;
        // –ú–∞—Å—Å–∞ –ª—å–¥–∞
        let p = p_h + p_v;
        // –ú–æ–º–µ–Ω—Ç –º–∞—Å—Å—ã –ª—å–¥–∞
        let m_x = m_x_h + m_x_v;
        let m_z = m_z_h + m_z_v;
    }
}
///
impl IIcing for Icing {
}
#[doc(hidden)]
pub trait IIcing {
}
// –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
#[doc(hidden)]
pub struct FakeIcing {

}
#[doc(hidden)]
#[allow(dead_code)]
impl FakeIcing {
    pub fn new(

    ) -> Self {
        Self {

        }
    }
}
#[doc(hidden)]
impl IIcing for FakeIcing {
}




